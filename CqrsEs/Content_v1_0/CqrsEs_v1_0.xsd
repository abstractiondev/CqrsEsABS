<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2011 rel. 2 sp1 (http://www.altova.com) by Kalle Launiala (Citrus Solutions Oy) -->
<xs:schema xmlns="http://tempuri.org/CqrsEs_v1_0.xsd" xmlns:mstns="http://tempuri.org/CqrsEs_v1_0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://tempuri.org/CqrsEs_v1_0.xsd" elementFormDefault="qualified" id="CqrsEs_v1_0">
	<xs:element name="CqrsEsAbstraction">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Domains">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Domain" type="DomainType"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ParameterType">
		<xs:complexContent>
			<xs:extension base="VariableType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="VariableType">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="dataType" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="DomainType">
		<xs:sequence>
			<xs:element name="Commands">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Command" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Parameter" type="ParameterType" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>(Opt) Command parameters.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Validations" minOccurs="0">
										<xs:annotation>
											<xs:documentation>(Opt) Command validations.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Validation" maxOccurs="unbounded"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="name" type="xs:string" use="required"/>
								<xs:attribute name="handlerName" use="required">
									<xs:annotation>
										<xs:documentation>Each command must have single exclusive handler defined.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CommandHandlers">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CommandHandler" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Command handler can handle different commands, but each command has only one exclusive handler defined.

Typically different commands have different handlers, but some occasions the commands are close enough within the same meaning that justify the use of single common handler.

In such a case the command specific handling is still separated at implementation level within the same handler.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="MapToEvent" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>(Opt) If any MapEvent(s) are defined, the command handler is structured to handle mapping to events.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="eventName" use="required">
												<xs:annotation>
													<xs:documentation>Event name for the event that is required result of the mapping.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="aggregateRootName">
												<xs:annotation>
													<xs:documentation>(Opt = "") If given, the aggregate root specified here is prepared to handle the event as well.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="name" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Events">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Event" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Field" type="VariableType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attribute name="name" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EventHandlers" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Non-aggregate root specific event handlers are specified here.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="EventHandler" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence/>
								<xs:attribute name="name" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AggregateRoots">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AggregateRoot" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Fields" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Field" maxOccurs="unbounded">
													<xs:complexType>
														<xs:attribute name="name" type="xs:string" use="required"/>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="name" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Projections">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Projection" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ForEvent" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="eventName" type="xs:string" use="required"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="Queries" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Query" maxOccurs="unbounded">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="Parameters" minOccurs="0">
																<xs:complexType>
																	<xs:sequence>
																		<xs:element name="Parameter" type="ParameterType" maxOccurs="unbounded"/>
																	</xs:sequence>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="name" type="xs:string" use="required"/>
								<xs:attribute name="includeImplicitQuery" type="xs:boolean" use="required"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
	</xs:complexType>
</xs:schema>
